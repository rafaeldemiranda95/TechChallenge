// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  nome      String
  cpf       String    @unique
  tipo      String    @default("cliente")
  senha     String?
  token     String?   @unique
  categoria String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now()) @updatedAt
  // Pedido    Pedido[]
  // Pagamento Pagamento[]
  // Fila      Fila[]
}

model Produto {
  id        Int       @id @default(autoincrement())
  nome      String
  categoria String
  preco     Float
  descricao String
  imagem    String
  pedidoId  Int?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now()) @updatedAt
  Pedido    Pedido?   @relation(fields: [pedidoId], references: [id])
}

model Pedido {
  id          Int       @id @default(autoincrement())
  // usuario     Usuario?   @relation(fields: [usuarioId], references: [id])
  usuarioId   Int?
  status      String    @default("pendente")
  total       Float
  tempoEspera Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  // Pagamento   Pagamento? @relation(fields: [pagamentoId], references: [id])
  // Fila        Fila?      @relation(fields: [filaId], references: [id])
  // Usuario     Usuario?   @relation(fields: [usuarioId], references: [id])
  pagamentoId Int?
  filaId      Int?
  // Pagamento   Pagamento? @relation(fields: [pagamentoId], references: [id])
  Produto     Produto[]
}

model PedidoProduto {
  pedidoId   Int
  produtoId  Int
  quantidade Int
  id         Int @id @default(autoincrement())
}

model Pagamento {
  id        Int      @id @default(autoincrement())
  // pedido    Pedido   @relation(fields: [pedidoId], references: [id])
  pedidoId  Int      @unique
  // usuario   Usuario? @relation(fields: [usuarioId], references: [id])
  usuarioId Int?
  valor     Float
  status    String
  data      DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Pedido    Pedido[]
}

model Fila {
  id        Int      @id @default(autoincrement())
  // pedido    Pedido   @relation(fields: [pedidoId], references: [id])
  pedidoId  Int      @unique
  // usuario   Usuario? @relation(fields: [usuarioId], references: [id])
  usuarioId Int?
  valor     Float
  status    String
  data      DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Pedido    Pedido[]
}
